<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">

  <interface name="org.projectatomic.rpmostree1.Sysroot">
    <!-- The booted OSName -->
    <property name="Booted" type="o" access="read"/>

    <property name="ActiveTransaction" type="o" access="read"/>

    <method name="CreateOSName">
      <arg type="s" name="name"/>
      <arg type="o" name="result" direction="out"/>
    </method>

    <!-- All deployments in boot order
         deployment format:
         s - Deployment id
         s - OSName
         i - Serial
         s - Checksum
         s - Version
         t - Timestamp
         s - Origin Refspec
         av - Signature information
    -->
    <property name="Deployments" type="a(ssisstsav)" access="read"/>
  </interface>

  <interface name="org.projectatomic.rpmostree1.OS">
    <property name="BootedDeployment" type="o" access="read"/>
    <property name="DefaultDeployment" type="o" access="read"/>
    <property name="RollbackDeployment" type="o" access="read"/>
    <property name="Deployments" type="as" access="read"/>
    <property name="HasCachedUpdateRpmDiff" type="b" access="read"/>
    <!-- NONE, DIFF, PREPARE, REBOOT -->
    <property name="AutomaticUpdatePolicy" type="s" access="read"/>
    <property name="Name" type="s" access="read"/>

    <method name="GetCachedUpdateRpmDiff">
      <arg type="s" name="deployid"/>
      <arg type="a(sua{sv})" name="result" direction="out"/>
    </method>

    <method name="DownloadUpdateRpmDiff">
      <arg type="s" name="deployid"/>
      <arg type="o" name="transaction" direction="out"/>
    </method>

    <method name="Upgrade">
      <arg type="o" name="transaction" direction="out"/>
    </method>

    <method name="Rollback">
      <arg type="o" name="transaction" direction="out"/>
    </method>

    <method name="ClearRollbackTarget">
      <arg type="o" name="transaction" direction="out"/>
    </method>

    <method name="Rebase">
      <arg type="s" name="refspec"/>
      <arg type="as" name="packages"/>
    </method>

    <method name="GetCachedRebaseRpmDiff">
      <arg type="s" name="refspec"/>
      <arg type="as" name="packages"/>
      <arg type="a(sua{sv})" name="result" direction="out"/>
    </method>

    <method name="DownloadRebaseRpmDiff">
      <arg type="s" name="refspec"/>
      <arg type="as" name="packages"/>
      <arg type="o" name="transaction" direction="out"/>
    </method>

  </interface>

  <interface name="org.projectatomic.rpmostree1.Transaction">
    <property name="Method" type="s" access="read"/>
    <property name="InitiatingOwner" type="s" access="read"/>

    <!-- Yes, we can. -->
    <method name="Cancel">
    </method>

    <signal name="DownloadProgress">
      <!-- time data, format is:
            start time, elapsed seconds
      -->
    	<arg name="time" type="(tt)" direction="out"/>

      <!--
         outstanding data counts, format is:
         (outstanding fetches, outstanding writes)
      -->
      <arg name="outstanding" type="(uu)" direction="out"/>

      <!--
         metadata counts, format is:
         (scanned, fetched, outstanding)
      -->
    	<arg name="metadata" type="(uuu)" direction="out"/>

      <!--
         delta data, format is:
         (total parts, fetched parts, total super blocks, total size)
      -->
    	<arg name="delta" type="(uuut)" direction="out"/>

      <!--
         content data, format is:
         (fetched, requested)
      -->
    	<arg name="content" type="(uu)" direction="out"/>

      <!--
         transfer data, format is:
         (bytes transfered, bytes/s)
      -->
    	<arg name="transfer" type="(tt)" direction="out"/>
    </signal>

    <signal name="SignatureProgress">
      <!-- An ostree GVariant containing signature data
           see ostree_gpg_verify_result_get_all.
      -->
    	<arg name="signature" type="av" direction="out"/>
      <!-- The signed commit -->
    	<arg name="commit" type="s" direction="out"/>
    </signal>
  </interface>
</node>
